using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApp4
{
    public partial class Form1 : Form
    {
        private int check = 0;
        private List<string> List = new List<string>();
        private List<Thread> ThreadList = new List<Thread>();

        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (List.Count > 0)
            {
                label3.Visible = true;
                label6.Visible = false;
                label2.Visible = false;
                ServicePointManager.DefaultConnectionLimit = 100;
                ServicePointManager.Expect100Continue = false;
                this.ThreadList.Clear();

                //Thread_Num
                int Threads = 1;

                if (Threads <= 2)
                {
                    for (int i = 0; i < Threads; i++)
                    {
                        Thread item = new Thread(new ThreadStart(this.go));
                        this.ThreadList.Add(item);
                    }
                    using (List<Thread>.Enumerator enumerator = this.ThreadList.GetEnumerator())
                    {
                        while (enumerator.MoveNext())
                        {
                            Thread current = enumerator.Current;
                            try
                            {
                                current.Start();

                            }
                            catch
                            {
                            }
                        }
                        return;
                    }
                }
            }
            else
            {
                MessageBox.Show("Please Load A List !");
            }

        }
        private void go()
        {
            try
            {
                while (check != List.Count)
                {
                        this.leecher(check);
                }

            }
            catch
            {

                
            }
            
        }
        private void leecher(int nmlist)
        {
            try
            {

                CookieContainer cookieContainer = new CookieContainer();
                HttpWebRequest httpWebR = (HttpWebRequest)WebRequest.Create(List[nmlist].ToString());
                httpWebR.Method = "GET";
                httpWebR.ServicePoint.Expect100Continue = false;
                httpWebR.UserAgent = "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36";
                httpWebR.CookieContainer = cookieContainer;
                httpWebR.Timeout = 5000;
                
                check++;
                label8.Invoke(new Action(() =>
                {
                    label8.Text = check.ToString();
                }));
                if (check == List.Count)
                {
                    label2.Invoke(new Action(() =>
                    {
                        label3.Visible = false;
                        label6.Visible = true;
                        label2.Visible = false;
                    }));

                }
                string html = "";
                using (HttpWebResponse httpWebRes = (HttpWebResponse)httpWebR.GetResponse())
                {
                    if (httpWebRes.StatusCode == HttpStatusCode.OK)
                    {
                        using (Stream responseS = httpWebRes.GetResponseStream())
                        {
                            using (StreamReader streamRear = new StreamReader(responseS))
                            {
                                html = streamRear.ReadToEnd();
                                httpWebRes.Close();
                            }

                        }
                    }

                }

                string pattern = @"\b(?:(?:2(?:[0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9])\.){3}(?:(?:2([0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9]))";
                Regex r = new Regex(pattern);
                MatchCollection matches = r.Matches(html);
                foreach (Match match in matches)
                {
                    listBox1.Invoke(new Action(() =>
                    {
                        string stt = match.Value;
                        listBox1.Items.Add(stt);
                        label5.Text = listBox1.Items.Count.ToString();
                    }));

                }
            }
            catch
            {

            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            var dialog = new OpenFileDialog();
            {
                dialog.Filter = "Text File (*.txt)|*.txt|All File (*.*)|*.*";
                try
                {
                    if (dialog.ShowDialog() == DialogResult.OK)
                    {
                        List.Clear();
                        string[] lines = File.ReadAllLines(dialog.FileName);
                        for (int i = 0; i < lines.Count(); i++)
                        {
                            if (lines[i].Contains("http"))
                            {
                                List.Add(lines[i]);
                                button2.Text = "Loaded : " + List.Count.ToString();
                            }
                            
                            
                            
                        }
                        
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
        }



        private void button3_Click(object sender, EventArgs e)
        {
            
        }

        private void button3_Click_1(object sender, EventArgs e)
        {
            if (button3.Text == "RESET")
            {
                Application.Restart();
            }
            else if (button3.Text == "Stop")
            {
                check = List.Count;
                button1.Enabled = false;
                button2.Enabled = false;
                button3.Text = "RESET";
                label3.Visible = false;
                label6.Visible = false;
                label2.Visible = true;
            }
        }

        private void button4_Click(object sender, EventArgs e)
        {
            System.IO.StreamWriter SaveFile = new System.IO.StreamWriter(listBox1.Items.Count.ToString() + "Proxy" + ".txt");
            foreach (var item in listBox1.Items)
            {
                SaveFile.WriteLine(item.ToString());
                
            }
            SaveFile.Close();
        }

        private void linkLabel2_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Process.Start("https://t.me/Dehkadeyegahani");
        }

        private void linkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Process.Start("https://breach-team.org/");
        }

        private void Form1_FormClosed(object sender, FormClosedEventArgs e)
        {
            Application.Exit();
        }

        private void pictureBox9_Click(object sender, EventArgs e)
        {
            Process.Start("https://breach-team.org/");
        }
    }
}